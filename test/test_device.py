import numpy as np

from qroute import environment as env


def test_circuit_pop():
    """
    Tests the distance matrix generated by a device
    """
    distances = env.device.IBMqx5Device().distances
    device_matrix = np.array([
        [0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, 0, 1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1],
        [-1, -1, 0, 1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1],
        [-1, -1, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [-1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, 2, 1, 0, 1, -1, -1, 2, 1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, 1, 0, -1, 2, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, 2, 1, 0, 1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 0, -1, -1, -1, -1],
        [-1, -1, -1, -1, 2, 1, -1, -1, -1, -1, 2, 1, 0, 1, 2, -1],
        [-1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, -1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1],
        [1, -1, 1, 2, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 0],
    ])
    assert device_matrix.shape == distances.shape
    for i in range(device_matrix.shape[0]):
        for j in range(device_matrix.shape[1]):
            assert (device_matrix[i][j] == distances[i][j]) or \
                   (device_matrix[i][j] == -1 and distances[i][j] > 1000)
